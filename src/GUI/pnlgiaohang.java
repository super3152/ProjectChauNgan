/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import BLL.BLLDonHang;
import static BLL.BLLDonHang.DoDuLieucbbHinhThuc;
import static BLL.BLLDonHang.HienThiChiTietDonHangSanPham;
import static BLL.BLLDonHang.HienThiDonHang;
import BLL.ChuyenDoi;
import DAO.DAODonHang;
import DAO.DAOHoaDon;
import DAO.DBConection;
import DTO.DTODonHang;
import DTO.DTOKhachHang;
import DTO.MyCombobox;
import static GUI.jdlDonHang.btthuydon;
import static GUI.jdlDonHang.bttxacnhan;
import static GUI.jdlDonHang.cbbHinhthuc;
import static GUI.jdlDonHang.tblChiTietHoaDonSanPham;
import static GUI.jdlDonHang.txtDiachi;
import static GUI.jdlDonHang.txtHinhthuc;
import static GUI.jdlDonHang.txtID;
import static GUI.jdlDonHang.txtSoHD;
import static GUI.jdlDonHang.txtTienhang;
import static GUI.jdlDonHang.txtTime;
import static GUI.jdlDonHang.txtTinhtrang;
import static GUI.jdlDonHang.txtUudai;

import static GUI.pnlkhachhang.tblkhachhang;
import static GUI.jdlDonHang.txtSDT;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.table.TableModel;
import static GUI.jdlDonHang.txtTenKhachHang;
import static GUI.jdlDonHang.txtNgayTao;
import static GUI.jdlDonHang.txtPhigiaohang;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.TimerTask;
import javax.swing.DefaultComboBoxModel;
/**
 *
 * @author Takemikazuchi
 */
public class pnlgiaohang extends javax.swing.JPanel {

    /**
     * Creates new form pnldonhang
     */
    public static int countDH, soTrangDH, trangDH = 1;
public int trangDH1 = 1;
    public pnlgiaohang() {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
        }
        initComponents();
        
           int milisInAMinute = 5000;
long time = System.currentTimeMillis();

Runnable update = new Runnable() {
    public void run() {
        
        DAODonHang.CountHoaDonTong();
        
    }
 
};

java.util.Timer timer = new java.util.Timer();
timer.schedule(new TimerTask() {
    public void run() {
        update.run();       
    }
}, time % milisInAMinute, milisInAMinute);
update.run();
        
        
        
        
         tblDonHang1.getColumnModel().getColumn(0).setPreferredWidth(7);
           tblDonHang1.getColumnModel().getColumn(1).setPreferredWidth(7);
            tblDonHang1.getColumnModel().getColumn(9).setPreferredWidth(7);
            
             BLLDonHang.HienThiDonHang(tblDonHang1, txttimkiem1.getText(),0);
             BLLDonHang.HienThiDonHangDongGoi(tblDonHang2, txttimkiem6.getText(),0);
              BLLDonHang.HienThiDonHangGiaoHang(tblDonHang7, txttimkiem7.getText(),0);
               BLLDonHang.HienThiDonHangHoanThanh(tblDonHang8, txttimkiem8.getText(),0);
               BLLDonHang.HienThiDonHangHuy(tblDonHang9, txttimkiem9.getText(),0);
            
//             DAODonHang.CountHoaDon();
//           if (countDH % 13 == 0) {
//            soTrangDH = countDH / 13;
//        } else {
//            soTrangDH = countDH / 13 + 1;
//        }
//          HienThiDonHang(tblDonHang1, txttimkiem1.getText(),0);
//        lblCountPage3.setText(trangDH1 +"/"+ soTrangDH+"");
//        lblNumberPage3.setText(trangDH1+"");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        pnldanhsach3 = new javax.swing.JPanel();
        srcdanhsach3 = new javax.swing.JScrollPane();
        tblDonHang1 = new javax.swing.JTable();
        txttimkiem1 = new javax.swing.JTextField();
        jPanel22 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        btnFirst3 = new javax.swing.JButton();
        btnBack3 = new javax.swing.JButton();
        lblNumberPage3 = new javax.swing.JLabel();
        btnNext3 = new javax.swing.JButton();
        btnLast3 = new javax.swing.JButton();
        lblCountPage3 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        pnldanhsach4 = new javax.swing.JPanel();
        srcdanhsach8 = new javax.swing.JScrollPane();
        tblDonHang2 = new javax.swing.JTable();
        txttimkiem6 = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        btnFirst4 = new javax.swing.JButton();
        btnBack4 = new javax.swing.JButton();
        lblNumberPage4 = new javax.swing.JLabel();
        btnNext4 = new javax.swing.JButton();
        btnLast4 = new javax.swing.JButton();
        lblCountPage4 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        pnldanhsach5 = new javax.swing.JPanel();
        srcdanhsach9 = new javax.swing.JScrollPane();
        tblDonHang7 = new javax.swing.JTable();
        txttimkiem7 = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        btnFirst5 = new javax.swing.JButton();
        btnBack5 = new javax.swing.JButton();
        lblNumberPage5 = new javax.swing.JLabel();
        btnNext5 = new javax.swing.JButton();
        btnLast5 = new javax.swing.JButton();
        lblCountPage5 = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        pnldanhsach6 = new javax.swing.JPanel();
        srcdanhsach10 = new javax.swing.JScrollPane();
        tblDonHang8 = new javax.swing.JTable();
        txttimkiem8 = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        jButton23 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        btnFirst6 = new javax.swing.JButton();
        btnBack6 = new javax.swing.JButton();
        lblNumberPage6 = new javax.swing.JLabel();
        btnNext6 = new javax.swing.JButton();
        btnLast6 = new javax.swing.JButton();
        lblCountPage6 = new javax.swing.JLabel();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        pnldanhsach8 = new javax.swing.JPanel();
        srcdanhsach12 = new javax.swing.JScrollPane();
        tblDonHang10 = new javax.swing.JTable();
        txttimkiem10 = new javax.swing.JTextField();
        jPanel27 = new javax.swing.JPanel();
        jButton29 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        btnFirst8 = new javax.swing.JButton();
        btnBack8 = new javax.swing.JButton();
        lblNumberPage8 = new javax.swing.JLabel();
        btnNext8 = new javax.swing.JButton();
        btnLast8 = new javax.swing.JButton();
        lblCountPage8 = new javax.swing.JLabel();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        pnldanhsach7 = new javax.swing.JPanel();
        srcdanhsach11 = new javax.swing.JScrollPane();
        tblDonHang9 = new javax.swing.JTable();
        txttimkiem9 = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jButton26 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        btnFirst7 = new javax.swing.JButton();
        btnBack7 = new javax.swing.JButton();
        lblNumberPage7 = new javax.swing.JLabel();
        btnNext7 = new javax.swing.JButton();
        btnLast7 = new javax.swing.JButton();
        lblCountPage7 = new javax.swing.JLabel();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(980, 618));
        setRequestFocusEnabled(false);
        setVerifyInputWhenFocusTarget(false);

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        pnldanhsach3.setBackground(new java.awt.Color(33, 36, 51));
        pnldanhsach3.setPreferredSize(new java.awt.Dimension(980, 618));

        tblDonHang1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblDonHang1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tblDonHang1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID", "Mã đơn hàng", "Ngày tạo đơn", "Thời gian", "Khách hàng", "Trạng thái chờ", "Thanh toán", "Tổng tiền", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonHang1.setDragEnabled(true);
        tblDonHang1.setFocusable(false);
        tblDonHang1.setIntercellSpacing(new java.awt.Dimension(0, 1));
        tblDonHang1.setName(""); // NOI18N
        tblDonHang1.setRowHeight(55);
        tblDonHang1.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblDonHang1.setShowVerticalLines(false);
        tblDonHang1.getTableHeader().setReorderingAllowed(false);
        tblDonHang1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonHang1MouseClicked(evt);
            }
        });
        srcdanhsach3.setViewportView(tblDonHang1);

        txttimkiem1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txttimkiem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimkiem1ActionPerformed(evt);
            }
        });

        jButton6.setText("Làm mới");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Đơn chưa xem: ");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnFirst3.setText("First");
        btnFirst3.setEnabled(false);
        btnFirst3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst3ActionPerformed(evt);
            }
        });

        btnBack3.setText("Back");
        btnBack3.setEnabled(false);
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        lblNumberPage3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNumberPage3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumberPage3.setText("1");

        btnNext3.setText("Next");
        btnNext3.setEnabled(false);
        btnNext3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext3ActionPerformed(evt);
            }
        });

        btnLast3.setText("Last");
        btnLast3.setEnabled(false);
        btnLast3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast3ActionPerformed(evt);
            }
        });

        lblCountPage3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCountPage3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCountPage3.setText("1/1");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumberPage3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCountPage3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCountPage3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumberPage3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLast3))
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/filter_edit_20px.png"))); // NOI18N
        jButton7.setText("Lọc đơn hàng");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Tìm kiếm");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnldanhsach3Layout = new javax.swing.GroupLayout(pnldanhsach3);
        pnldanhsach3.setLayout(pnldanhsach3Layout);
        pnldanhsach3Layout.setHorizontalGroup(
            pnldanhsach3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach3Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txttimkiem1)
                .addGap(0, 0, 0)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(srcdanhsach3, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnldanhsach3Layout.setVerticalGroup(
            pnldanhsach3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach3Layout.createSequentialGroup()
                .addGroup(pnldanhsach3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttimkiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(srcdanhsach3, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab("Chờ duyệt", new javax.swing.ImageIcon(getClass().getResource("/IMAGE/list_20px.png")), pnldanhsach3); // NOI18N

        pnldanhsach4.setBackground(new java.awt.Color(33, 36, 51));
        pnldanhsach4.setPreferredSize(new java.awt.Dimension(980, 618));

        tblDonHang2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblDonHang2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tblDonHang2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID", "Mã đơn hàng", "Ngày tạo đơn", "Thời gian", "Khách hàng", "Trạng thái chờ", "Thanh toán", "Tổng tiền", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonHang2.setDragEnabled(true);
        tblDonHang2.setFocusable(false);
        tblDonHang2.setIntercellSpacing(new java.awt.Dimension(0, 1));
        tblDonHang2.setName(""); // NOI18N
        tblDonHang2.setRowHeight(55);
        tblDonHang2.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblDonHang2.setShowVerticalLines(false);
        tblDonHang2.getTableHeader().setReorderingAllowed(false);
        tblDonHang2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonHang2MouseClicked(evt);
            }
        });
        srcdanhsach8.setViewportView(tblDonHang2);

        txttimkiem6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txttimkiem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimkiem6ActionPerformed(evt);
            }
        });

        jButton9.setText("Làm mới");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Đơn chưa xem: ");

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnFirst4.setText("First");
        btnFirst4.setEnabled(false);
        btnFirst4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst4ActionPerformed(evt);
            }
        });

        btnBack4.setText("Back");
        btnBack4.setEnabled(false);
        btnBack4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack4ActionPerformed(evt);
            }
        });

        lblNumberPage4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNumberPage4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumberPage4.setText("1");

        btnNext4.setText("Next");
        btnNext4.setEnabled(false);
        btnNext4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext4ActionPerformed(evt);
            }
        });

        btnLast4.setText("Last");
        btnLast4.setEnabled(false);
        btnLast4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast4ActionPerformed(evt);
            }
        });

        lblCountPage4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCountPage4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCountPage4.setText("1/1");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumberPage4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCountPage4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCountPage4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumberPage4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLast4))
                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jButton18.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/filter_edit_20px.png"))); // NOI18N
        jButton18.setText("Lọc đơn hàng");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Tìm kiếm");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnldanhsach4Layout = new javax.swing.GroupLayout(pnldanhsach4);
        pnldanhsach4.setLayout(pnldanhsach4Layout);
        pnldanhsach4Layout.setHorizontalGroup(
            pnldanhsach4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach4Layout.createSequentialGroup()
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txttimkiem6)
                .addGap(0, 0, 0)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(srcdanhsach8, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnldanhsach4Layout.setVerticalGroup(
            pnldanhsach4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach4Layout.createSequentialGroup()
                .addGroup(pnldanhsach4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttimkiem6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(srcdanhsach8, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab("Chờ đóng gói", new javax.swing.ImageIcon(getClass().getResource("/IMAGE/box_20px.png")), pnldanhsach4); // NOI18N

        pnldanhsach5.setBackground(new java.awt.Color(33, 36, 51));
        pnldanhsach5.setPreferredSize(new java.awt.Dimension(980, 618));

        tblDonHang7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblDonHang7.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tblDonHang7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID", "Mã đơn hàng", "Ngày tạo đơn", "Thời gian", "Khách hàng", "Trạng thái chờ", "Thanh toán", "Tổng tiền", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonHang7.setDragEnabled(true);
        tblDonHang7.setFocusable(false);
        tblDonHang7.setIntercellSpacing(new java.awt.Dimension(0, 1));
        tblDonHang7.setName(""); // NOI18N
        tblDonHang7.setRowHeight(55);
        tblDonHang7.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblDonHang7.setShowVerticalLines(false);
        tblDonHang7.getTableHeader().setReorderingAllowed(false);
        tblDonHang7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonHang7MouseClicked(evt);
            }
        });
        srcdanhsach9.setViewportView(tblDonHang7);

        txttimkiem7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txttimkiem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimkiem7ActionPerformed(evt);
            }
        });

        jButton20.setText("Làm mới");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Đơn chưa xem: ");

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnFirst5.setText("First");
        btnFirst5.setEnabled(false);
        btnFirst5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst5ActionPerformed(evt);
            }
        });

        btnBack5.setText("Back");
        btnBack5.setEnabled(false);
        btnBack5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack5ActionPerformed(evt);
            }
        });

        lblNumberPage5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNumberPage5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumberPage5.setText("1");

        btnNext5.setText("Next");
        btnNext5.setEnabled(false);
        btnNext5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext5ActionPerformed(evt);
            }
        });

        btnLast5.setText("Last");
        btnLast5.setEnabled(false);
        btnLast5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast5ActionPerformed(evt);
            }
        });

        lblCountPage5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCountPage5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCountPage5.setText("1/1");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumberPage5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCountPage5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6)
                    .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCountPage5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumberPage5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLast5))
                    .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jButton21.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/filter_edit_20px.png"))); // NOI18N
        jButton21.setText("Lọc đơn hàng");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("Tìm kiếm");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnldanhsach5Layout = new javax.swing.GroupLayout(pnldanhsach5);
        pnldanhsach5.setLayout(pnldanhsach5Layout);
        pnldanhsach5Layout.setHorizontalGroup(
            pnldanhsach5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach5Layout.createSequentialGroup()
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txttimkiem7)
                .addGap(0, 0, 0)
                .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(srcdanhsach9, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE)
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnldanhsach5Layout.setVerticalGroup(
            pnldanhsach5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach5Layout.createSequentialGroup()
                .addGroup(pnldanhsach5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttimkiem7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(srcdanhsach9, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab("Chờ giao hàng", new javax.swing.ImageIcon(getClass().getResource("/IMAGE/shipped_20px.png")), pnldanhsach5); // NOI18N

        pnldanhsach6.setBackground(new java.awt.Color(33, 36, 51));
        pnldanhsach6.setPreferredSize(new java.awt.Dimension(980, 618));

        tblDonHang8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblDonHang8.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tblDonHang8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID", "Mã đơn hàng", "Ngày tạo đơn", "Thời gian", "Khách hàng", "Trạng thái chờ", "Thanh toán", "Tổng tiền", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonHang8.setDragEnabled(true);
        tblDonHang8.setFocusable(false);
        tblDonHang8.setIntercellSpacing(new java.awt.Dimension(0, 1));
        tblDonHang8.setName(""); // NOI18N
        tblDonHang8.setRowHeight(55);
        tblDonHang8.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblDonHang8.setShowVerticalLines(false);
        tblDonHang8.getTableHeader().setReorderingAllowed(false);
        tblDonHang8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonHang8MouseClicked(evt);
            }
        });
        srcdanhsach10.setViewportView(tblDonHang8);

        txttimkiem8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txttimkiem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimkiem8ActionPerformed(evt);
            }
        });

        jButton23.setText("Làm mới");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Đơn chưa xem: ");

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnFirst6.setText("First");
        btnFirst6.setEnabled(false);
        btnFirst6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst6ActionPerformed(evt);
            }
        });

        btnBack6.setText("Back");
        btnBack6.setEnabled(false);
        btnBack6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack6ActionPerformed(evt);
            }
        });

        lblNumberPage6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNumberPage6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumberPage6.setText("1");

        btnNext6.setText("Next");
        btnNext6.setEnabled(false);
        btnNext6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext6ActionPerformed(evt);
            }
        });

        btnLast6.setText("Last");
        btnLast6.setEnabled(false);
        btnLast6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast6ActionPerformed(evt);
            }
        });

        lblCountPage6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCountPage6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCountPage6.setText("1/1");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumberPage6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCountPage6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator7)
                    .addComponent(jButton23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCountPage6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumberPage6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLast6))
                    .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jButton24.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/filter_edit_20px.png"))); // NOI18N
        jButton24.setText("Lọc đơn hàng");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setText("Tìm kiếm");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnldanhsach6Layout = new javax.swing.GroupLayout(pnldanhsach6);
        pnldanhsach6.setLayout(pnldanhsach6Layout);
        pnldanhsach6Layout.setHorizontalGroup(
            pnldanhsach6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach6Layout.createSequentialGroup()
                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txttimkiem8)
                .addGap(0, 0, 0)
                .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(srcdanhsach10, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE)
            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnldanhsach6Layout.setVerticalGroup(
            pnldanhsach6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach6Layout.createSequentialGroup()
                .addGroup(pnldanhsach6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttimkiem8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(srcdanhsach10, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab("Chờ hoàn thành", new javax.swing.ImageIcon(getClass().getResource("/IMAGE/checked_checkbox_20px.png")), pnldanhsach6); // NOI18N

        pnldanhsach8.setBackground(new java.awt.Color(33, 36, 51));
        pnldanhsach8.setPreferredSize(new java.awt.Dimension(980, 618));

        tblDonHang10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblDonHang10.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tblDonHang10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID", "Mã đơn hàng", "Ngày tạo đơn", "Thời gian", "Khách hàng", "Trạng thái đơn hàng", "Thanh toán", "Tổng tiền", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonHang10.setDragEnabled(true);
        tblDonHang10.setFocusable(false);
        tblDonHang10.setIntercellSpacing(new java.awt.Dimension(0, 1));
        tblDonHang10.setName(""); // NOI18N
        tblDonHang10.setRowHeight(55);
        tblDonHang10.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblDonHang10.setShowVerticalLines(false);
        tblDonHang10.getTableHeader().setReorderingAllowed(false);
        tblDonHang10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonHang10MouseClicked(evt);
            }
        });
        srcdanhsach12.setViewportView(tblDonHang10);

        txttimkiem10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txttimkiem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimkiem10ActionPerformed(evt);
            }
        });

        jButton29.setText("Làm mới");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Đơn chưa xem: ");

        jSeparator9.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnFirst8.setText("First");
        btnFirst8.setEnabled(false);
        btnFirst8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst8ActionPerformed(evt);
            }
        });

        btnBack8.setText("Back");
        btnBack8.setEnabled(false);
        btnBack8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack8ActionPerformed(evt);
            }
        });

        lblNumberPage8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNumberPage8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumberPage8.setText("1");

        btnNext8.setText("Next");
        btnNext8.setEnabled(false);
        btnNext8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext8ActionPerformed(evt);
            }
        });

        btnLast8.setText("Last");
        btnLast8.setEnabled(false);
        btnLast8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast8ActionPerformed(evt);
            }
        });

        lblCountPage8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCountPage8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCountPage8.setText("1/1");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst8, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack8, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumberPage8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext8, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast8, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCountPage8, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator9)
                    .addComponent(jButton29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCountPage8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumberPage8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLast8))
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jButton30.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/filter_edit_20px.png"))); // NOI18N
        jButton30.setText("Lọc đơn hàng");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton31.setText("Tìm kiếm");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnldanhsach8Layout = new javax.swing.GroupLayout(pnldanhsach8);
        pnldanhsach8.setLayout(pnldanhsach8Layout);
        pnldanhsach8Layout.setHorizontalGroup(
            pnldanhsach8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach8Layout.createSequentialGroup()
                .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txttimkiem10)
                .addGap(0, 0, 0)
                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(srcdanhsach12, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE)
            .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnldanhsach8Layout.setVerticalGroup(
            pnldanhsach8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach8Layout.createSequentialGroup()
                .addGroup(pnldanhsach8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttimkiem10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(srcdanhsach12, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab("Đã hoàn thành", new javax.swing.ImageIcon(getClass().getResource("/IMAGE/ok_20px.png")), pnldanhsach8); // NOI18N

        pnldanhsach7.setBackground(new java.awt.Color(33, 36, 51));
        pnldanhsach7.setPreferredSize(new java.awt.Dimension(980, 618));

        tblDonHang9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblDonHang9.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tblDonHang9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID", "Mã đơn hàng", "Ngày tạo đơn", "Thời gian", "Khách hàng", "Trạng thái đơn hàng", "Thanh toán", "Tổng tiền", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonHang9.setDragEnabled(true);
        tblDonHang9.setFocusable(false);
        tblDonHang9.setIntercellSpacing(new java.awt.Dimension(0, 1));
        tblDonHang9.setName(""); // NOI18N
        tblDonHang9.setRowHeight(55);
        tblDonHang9.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblDonHang9.setShowVerticalLines(false);
        tblDonHang9.getTableHeader().setReorderingAllowed(false);
        tblDonHang9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonHang9MouseClicked(evt);
            }
        });
        srcdanhsach11.setViewportView(tblDonHang9);

        txttimkiem9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txttimkiem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimkiem9ActionPerformed(evt);
            }
        });

        jButton26.setText("Làm mới");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Đơn chưa xem: ");

        jSeparator8.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnFirst7.setText("First");
        btnFirst7.setEnabled(false);
        btnFirst7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirst7ActionPerformed(evt);
            }
        });

        btnBack7.setText("Back");
        btnBack7.setEnabled(false);
        btnBack7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack7ActionPerformed(evt);
            }
        });

        lblNumberPage7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNumberPage7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNumberPage7.setText("1");

        btnNext7.setText("Next");
        btnNext7.setEnabled(false);
        btnNext7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext7ActionPerformed(evt);
            }
        });

        btnLast7.setText("Last");
        btnLast7.setEnabled(false);
        btnLast7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLast7ActionPerformed(evt);
            }
        });

        lblCountPage7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCountPage7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCountPage7.setText("1/1");

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumberPage7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCountPage7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator8)
                    .addComponent(jButton26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCountPage7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNumberPage7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLast7))
                    .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jButton27.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/filter_edit_20px.png"))); // NOI18N
        jButton27.setText("Lọc đơn hàng");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setText("Tìm kiếm");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnldanhsach7Layout = new javax.swing.GroupLayout(pnldanhsach7);
        pnldanhsach7.setLayout(pnldanhsach7Layout);
        pnldanhsach7Layout.setHorizontalGroup(
            pnldanhsach7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach7Layout.createSequentialGroup()
                .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txttimkiem9)
                .addGap(0, 0, 0)
                .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(srcdanhsach11, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE)
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnldanhsach7Layout.setVerticalGroup(
            pnldanhsach7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnldanhsach7Layout.createSequentialGroup()
                .addGroup(pnldanhsach7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttimkiem9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(srcdanhsach11, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane2.addTab("Đơn Hủy", new javax.swing.ImageIcon(getClass().getResource("/IMAGE/delete_20px.png")), pnldanhsach7); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblDonHang1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonHang1MouseClicked
        int Dongduocchon = tblDonHang1.getSelectedRow();

        if (evt.getClickCount() == 2) {
            if (Dongduocchon >= 0) {

                if (tblDonHang1.getValueAt(Dongduocchon, 9).equals("<html><body style='color:red;'>Đã Xem</body></html>")) {
                    System.out.println("Đã xem");
                }else{
                    String id = tblDonHang1.getValueAt(Dongduocchon, 1).toString();
                    System.out.println(id);
                    DTODonHang dhv = new DTODonHang(Integer.parseInt(id), 1);
                    BLLDonHang.KiemTraSuaDonHangView(Integer.parseInt(id), "1");
                    BLLDonHang.SuaDonHangView(dhv);

                }

                int MaDH = Integer.parseInt(tblDonHang1.getValueAt(Dongduocchon, 1).toString());
                DTODonHang dh = BLL.BLLDonHang.GetMaDH(MaDH);

                String dongtrangthai = tblDonHang1.getValueAt(Dongduocchon, 6).toString();
                if (dongtrangthai.equals("<html><body style='color:red;'>Chờ duyệt</body></html>")) {
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("CHỜ DUYỆT");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Đóng gói</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("ĐÓNG GÓI");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    bttxacnhan.setText("Đóng gói");
                      btthuydon.setEnabled(false);
                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Giao hàng</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);
                  
                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("GIAO HÀNG");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    txtPhigiaohang.setEnabled(true);
                    cbbHinhthuc.setEnabled(true);

                    bttxacnhan.setText("Giao hàng");
                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Hoàn thành</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);
                      btthuydon.setEnabled(false);
                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("HOÀN THÀNH");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    bttxacnhan.setText("Hoàn thành");
                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                }

                //-------------------------------------------
                //-------------------------------------------
                //-------------------------------------------
                else{
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("ĐƠN HÀNG ĐÃ HỦY");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }
                    bttxacnhan.setEnabled(false);
                    btthuydon.setEnabled(false);
                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);
                    donhang.setVisible(true);

                }

            }
        }
    }//GEN-LAST:event_tblDonHang1MouseClicked

    private void txttimkiem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimkiem1ActionPerformed

    }//GEN-LAST:event_txttimkiem1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        HienThiDonHang(tblDonHang1, txttimkiem1.getText(),0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnFirst3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst3ActionPerformed
          trangDH = 0;
      HienThiDonHang(tblDonHang1, txttimkiem1.getText(),trangDH);
        trangDH1 = 1;
          btnNext3.setEnabled(true);
        btnLast3.setEnabled(true);
        btnFirst3.setEnabled(false);
        btnBack3.setEnabled(false);
        lblCountPage3.setText(trangDH1 +"/"+ soTrangDH+"");
        lblNumberPage3.setText(trangDH1+"");
    }//GEN-LAST:event_btnFirst3ActionPerformed

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
          if (trangDH1 == 2 ) {
                 
                   trangDH = trangDH - 13 ;
           HienThiDonHang(tblDonHang1, txttimkiem1.getText(),trangDH);
           lblNumberPage3.setText(""+(trangDH1 = (trangDH1-1))); 
           lblCountPage3.setText(""+trangDH1+"/"+soTrangDH);
             btnBack3.setEnabled(false);
             btnFirst3.setEnabled(false);
               btnNext3.setEnabled(true);
                
                 btnLast3.setEnabled(true);
           
        }else{
               btnBack3.setEnabled(true);
                 btnNext3.setEnabled(true);
                
                 btnLast3.setEnabled(true);
                   trangDH = trangDH - 13 ;
             HienThiDonHang(tblDonHang1, txttimkiem1.getText(),trangDH);
           lblNumberPage3.setText(""+(trangDH1 = (trangDH1-1))); 
           lblCountPage3.setText(""+trangDH1+"/"+soTrangDH);
        }
        
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void btnNext3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext3ActionPerformed
        if (trangDH1 == soTrangDH-1) {
              trangDH = trangDH + 13 ;
            HienThiDonHang(tblDonHang1, txttimkiem1.getText(),trangDH);
           lblNumberPage3.setText(""+(trangDH1 = (trangDH1+1))); 
           lblCountPage3.setText(""+trangDH1+"/"+soTrangDH);
            
            btnNext3.setEnabled(false);
             btnLast3.setEnabled(false);
               btnBack3.setEnabled(true);
                btnFirst3.setEnabled(true);
        }else{
              btnNext3.setEnabled(true);
               btnBack3.setEnabled(true);
                btnFirst3.setEnabled(true);
                   trangDH = trangDH + 13 ;
             HienThiDonHang(tblDonHang1, txttimkiem1.getText(),trangDH);
           lblNumberPage3.setText(""+(trangDH1 = (trangDH1+1))); 
           lblCountPage3.setText(""+trangDH1+"/"+soTrangDH);
        }
           System.out.println(lblNumberPage3.getText());
            
    }//GEN-LAST:event_btnNext3ActionPerformed

    private void btnLast3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast3ActionPerformed
         btnNext3.setEnabled(false);
        btnLast3.setEnabled(false);
        btnFirst3.setEnabled(true);
        btnBack3.setEnabled(true);      
        trangDH = (13*soTrangDH)-13;
      HienThiDonHang(tblDonHang1, txttimkiem1.getText(),trangDH);
       trangDH1 = soTrangDH;
       lblCountPage3.setText(trangDH1 +"/"+ soTrangDH+"");
        lblNumberPage3.setText(trangDH1+"");
    }//GEN-LAST:event_btnLast3ActionPerformed

    private void tblDonHang2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonHang2MouseClicked
          int Dongduocchon = tblDonHang2.getSelectedRow();

        if (evt.getClickCount() == 2) {
            if (Dongduocchon >= 0) {

                

                int MaDH = Integer.parseInt(tblDonHang2.getValueAt(Dongduocchon, 1).toString());
                DTODonHang dh = BLL.BLLDonHang.GetMaDH(MaDH);

                String dongtrangthai = tblDonHang2.getValueAt(Dongduocchon, 6).toString();
                if (dongtrangthai.equals("<html><body style='color:red;'>Chờ duyệt</body></html>")) {
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("CHỜ DUYỆT");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Đóng gói</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("ĐÓNG GÓI");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    bttxacnhan.setText("Đóng gói");

                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Giao hàng</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("GIAO HÀNG");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    txtPhigiaohang.setEnabled(true);
                    cbbHinhthuc.setEnabled(true);

                    bttxacnhan.setText("Giao hàng");
                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Hoàn thành</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);
                      btthuydon.setEnabled(false);
                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("HOÀN THÀNH");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    bttxacnhan.setText("Hoàn thành");
                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                }

                //-------------------------------------------
                //-------------------------------------------
                //-------------------------------------------
                else{
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("ĐƠN HÀNG ĐÃ HỦY");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }
                    bttxacnhan.setEnabled(false);
                    btthuydon.setEnabled(false);
                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);
                    donhang.setVisible(true);

                }

            }
        }
    }//GEN-LAST:event_tblDonHang2MouseClicked

    private void txttimkiem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimkiem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimkiem6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void btnFirst4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFirst4ActionPerformed

    private void btnBack4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBack4ActionPerformed

    private void btnNext4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNext4ActionPerformed

    private void btnLast4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLast4ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton19ActionPerformed

    private void tblDonHang7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonHang7MouseClicked
           int Dongduocchon = tblDonHang7.getSelectedRow();

        if (evt.getClickCount() == 2) {
            if (Dongduocchon >= 0) {

               

                int MaDH = Integer.parseInt(tblDonHang7.getValueAt(Dongduocchon, 1).toString());
                DTODonHang dh = BLL.BLLDonHang.GetMaDH(MaDH);

                String dongtrangthai = tblDonHang7.getValueAt(Dongduocchon, 6).toString();
                System.out.println(dongtrangthai);
                if (dongtrangthai.equals("<html><body style='color:red;'>Chờ duyệt</body></html>")) {
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("CHỜ DUYỆT");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Đóng gói</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("ĐÓNG GÓI");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    bttxacnhan.setText("Đóng gói");

                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Giao hàng</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);
  btthuydon.setEnabled(false);
                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("GIAO HÀNG");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    txtPhigiaohang.setEnabled(true);
                    cbbHinhthuc.setEnabled(true);

                    bttxacnhan.setText("Giao hàng");
                    donhang.setVisible(true);
                  
                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Hoàn thành</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("HOÀN THÀNH");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    bttxacnhan.setText("Hoàn thành");
                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                }

                //-------------------------------------------
                //-------------------------------------------
                //-------------------------------------------
                else{
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("ĐƠN HÀNG ĐÃ HỦY");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }
                    bttxacnhan.setEnabled(false);
                    btthuydon.setEnabled(false);
                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);
                    donhang.setVisible(true);

                }

            }
        }
    }//GEN-LAST:event_tblDonHang7MouseClicked

    private void txttimkiem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimkiem7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimkiem7ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton20ActionPerformed

    private void btnFirst5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFirst5ActionPerformed

    private void btnBack5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBack5ActionPerformed

    private void btnNext5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNext5ActionPerformed

    private void btnLast5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLast5ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton22ActionPerformed

    private void tblDonHang8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonHang8MouseClicked
        int Dongduocchon = tblDonHang8.getSelectedRow();

        if (evt.getClickCount() == 2) {
            if (Dongduocchon >= 0) {

               

                int MaDH = Integer.parseInt(tblDonHang8.getValueAt(Dongduocchon, 1).toString());
                DTODonHang dh = BLL.BLLDonHang.GetMaDH(MaDH);

                String dongtrangthai = tblDonHang8.getValueAt(Dongduocchon, 6).toString();
                if (dongtrangthai.equals("<html><body style='color:red;'>Chờ duyệt</body></html>")) {
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("CHỜ DUYỆT");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Đóng gói</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("ĐÓNG GÓI");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    bttxacnhan.setText("Đóng gói");

                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Giao hàng</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("GIAO HÀNG");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    txtPhigiaohang.setEnabled(true);
                    cbbHinhthuc.setEnabled(true);

                    bttxacnhan.setText("Giao hàng");
                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Hoàn thành</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);
                      btthuydon.setEnabled(false);
                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("HOÀN THÀNH");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    bttxacnhan.setText("Hoàn thành");
                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                }

                //-------------------------------------------
                //-------------------------------------------
                //-------------------------------------------
                else{
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("ĐƠN HÀNG ĐÃ HỦY");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }
                    bttxacnhan.setEnabled(false);
                    btthuydon.setEnabled(false);
                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);
                    donhang.setVisible(true);

                }

            }
        }
    }//GEN-LAST:event_tblDonHang8MouseClicked

    private void txttimkiem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimkiem8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimkiem8ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton23ActionPerformed

    private void btnFirst6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFirst6ActionPerformed

    private void btnBack6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBack6ActionPerformed

    private void btnNext6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNext6ActionPerformed

    private void btnLast6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLast6ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton25ActionPerformed

    private void tblDonHang9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonHang9MouseClicked
         int Dongduocchon = tblDonHang9.getSelectedRow();

        if (evt.getClickCount() == 2) {
            if (Dongduocchon >= 0) {

               

                int MaDH = Integer.parseInt(tblDonHang9.getValueAt(Dongduocchon, 1).toString());
                DTODonHang dh = BLL.BLLDonHang.GetMaDH(MaDH);

                String dongtrangthai = tblDonHang9.getValueAt(Dongduocchon, 6).toString();
                if (dongtrangthai.equals("<html><body style='color:red;'>Chờ duyệt</body></html>")) {
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("CHỜ DUYỆT");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Đóng gói</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("ĐÓNG GÓI");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    bttxacnhan.setText("Đóng gói");

                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Giao hàng</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);
                      btthuydon.setEnabled(false);
                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("GIAO HÀNG");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());

                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);

                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }

                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));

                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    txtPhigiaohang.setEnabled(true);
                    cbbHinhthuc.setEnabled(true);

                    bttxacnhan.setText("Giao hàng");
                    donhang.setVisible(true);

                    //-------------------------------------------
                    //-------------------------------------------
                    //-------------------------------------------
                }else if(dongtrangthai.equals("<html><body style='color:red;'>Hoàn thành</body></html>")){
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.blue);
                    jdlDonHang.txtTrangthai.setText("HOÀN THÀNH");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }

                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));
                    bttxacnhan.setText("Hoàn thành");
                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);

                    donhang.setVisible(true);

                }

                //-------------------------------------------
                //-------------------------------------------
                //-------------------------------------------
                else{
                    jdlDonHang donhang = new jdlDonHang(new javax.swing.JFrame(), true);

                    jdlDonHang.txtTrangthai.setForeground(Color.red);
                    jdlDonHang.txtTrangthai.setText("ĐƠN HÀNG ĐÃ HỦY");

                    if (dh.getTinhtrang()== 0) {
                        txtTinhtrang.setForeground(Color.red);
                        txtTinhtrang.setText("CHƯA THANH TOÁN");
                    }else{
                        txtTinhtrang.setForeground(Color.blue);
                        txtTinhtrang.setText("ĐÃ THANH TOÁN");
                    }
                    txtTenKhachHang.setText(dh.getMaKhachHang()+"");
                    txtDiachi.setText(dh.getDiachi());
                    txtSDT.setText(dh.getSodienthoai()+"");
                    txtID.setText(dh.getIdhoadon()+"");
                    txtSoHD.setText(dh.getSoHoaDon());
                    txtNgayTao.setText(dh.getNgayTaoHoaDon());
                    txtTime.setText(dh.getTimeTaoHoaDon());
                    ResultSet rsSize = DAO.DAODonHang.LayHinhThucTheoID(dh.getHinhthucvanchuyen());
                    try {
                        while (rsSize.next()) {
                            DefaultComboBoxModel cbbModel1 = (DefaultComboBoxModel) cbbHinhthuc.getModel();
                            for (int i = 0; i < cbbHinhthuc.getItemCount(); i++) {
                                MyCombobox mb1 = (MyCombobox) cbbModel1.getElementAt(i);
                                String tenCV = mb1.Text.toString();
                                if (tenCV.equals(rsSize.getString("tenhinhthuc"))) {
                                    cbbHinhthuc.setSelectedIndex(i);
                                }
                            }
                        }
                    } catch (SQLException ex) {
                        ThongBaoLoi.ThongBao("Lỗi Lấy dữ liệu ComboBox Hình thức", "Thông Báo");

                    }
                    txtPhigiaohang.setText(ChuyenDoi.DinhDangTien(dh.getTiengiaohang()));
                    if (dh.getHinhthucthanhtoan() == 0) {
                        txtHinhthuc.setText("Thu COD sau khi thanh toán");
                    }else{
                        txtHinhthuc.setText("Thanh toán ATM");
                    }

                    txtTienhang.setText(ChuyenDoi.DinhDangTien(dh.getTongTien())+" VND");

                    if (tblChiTietHoaDonSanPham != null) {

                        Double sum = 0.0;
                        for(int i = 0; i < tblChiTietHoaDonSanPham.getRowCount(); i++)
                        {
                            sum = sum + Double.parseDouble(tblChiTietHoaDonSanPham.getValueAt(i, 8).toString());
                        }

                        txtUudai.setText(ChuyenDoi.DinhDangTien(sum)+" VND");
                    }
                    bttxacnhan.setEnabled(false);
                    btthuydon.setEnabled(false);
                    HienThiChiTietDonHangSanPham(tblChiTietHoaDonSanPham, Integer.parseInt(txtID.getText()));

                    txtPhigiaohang.setEnabled(false);
                    cbbHinhthuc.setEnabled(false);
                    donhang.setVisible(true);

                }

            }
        }
    }//GEN-LAST:event_tblDonHang9MouseClicked

    private void txttimkiem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimkiem9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimkiem9ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton26ActionPerformed

    private void btnFirst7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFirst7ActionPerformed

    private void btnBack7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBack7ActionPerformed

    private void btnNext7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNext7ActionPerformed

    private void btnLast7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLast7ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton28ActionPerformed

    private void tblDonHang10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonHang10MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDonHang10MouseClicked

    private void txttimkiem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimkiem10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimkiem10ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton29ActionPerformed

    private void btnFirst8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirst8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFirst8ActionPerformed

    private void btnBack8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBack8ActionPerformed

    private void btnNext8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNext8ActionPerformed

    private void btnLast8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLast8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLast8ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton31ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnBack4;
    private javax.swing.JButton btnBack5;
    private javax.swing.JButton btnBack6;
    private javax.swing.JButton btnBack7;
    private javax.swing.JButton btnBack8;
    private javax.swing.JButton btnFirst3;
    private javax.swing.JButton btnFirst4;
    private javax.swing.JButton btnFirst5;
    private javax.swing.JButton btnFirst6;
    private javax.swing.JButton btnFirst7;
    private javax.swing.JButton btnFirst8;
    private javax.swing.JButton btnLast3;
    private javax.swing.JButton btnLast4;
    private javax.swing.JButton btnLast5;
    private javax.swing.JButton btnLast6;
    private javax.swing.JButton btnLast7;
    private javax.swing.JButton btnLast8;
    private javax.swing.JButton btnNext3;
    private javax.swing.JButton btnNext4;
    private javax.swing.JButton btnNext5;
    private javax.swing.JButton btnNext6;
    private javax.swing.JButton btnNext7;
    private javax.swing.JButton btnNext8;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    public static javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    public static javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblCountPage3;
    private javax.swing.JLabel lblCountPage4;
    private javax.swing.JLabel lblCountPage5;
    private javax.swing.JLabel lblCountPage6;
    private javax.swing.JLabel lblCountPage7;
    private javax.swing.JLabel lblCountPage8;
    private javax.swing.JLabel lblNumberPage3;
    private javax.swing.JLabel lblNumberPage4;
    private javax.swing.JLabel lblNumberPage5;
    private javax.swing.JLabel lblNumberPage6;
    private javax.swing.JLabel lblNumberPage7;
    private javax.swing.JLabel lblNumberPage8;
    private javax.swing.JPanel pnldanhsach3;
    private javax.swing.JPanel pnldanhsach4;
    private javax.swing.JPanel pnldanhsach5;
    private javax.swing.JPanel pnldanhsach6;
    private javax.swing.JPanel pnldanhsach7;
    private javax.swing.JPanel pnldanhsach8;
    private javax.swing.JScrollPane srcdanhsach10;
    private javax.swing.JScrollPane srcdanhsach11;
    private javax.swing.JScrollPane srcdanhsach12;
    private javax.swing.JScrollPane srcdanhsach3;
    private javax.swing.JScrollPane srcdanhsach8;
    private javax.swing.JScrollPane srcdanhsach9;
    public static javax.swing.JTable tblDonHang1;
    public static javax.swing.JTable tblDonHang10;
    public static javax.swing.JTable tblDonHang2;
    public static javax.swing.JTable tblDonHang7;
    public static javax.swing.JTable tblDonHang8;
    public static javax.swing.JTable tblDonHang9;
    public static javax.swing.JTextField txttimkiem1;
    public static javax.swing.JTextField txttimkiem10;
    public static javax.swing.JTextField txttimkiem6;
    public static javax.swing.JTextField txttimkiem7;
    public static javax.swing.JTextField txttimkiem8;
    public static javax.swing.JTextField txttimkiem9;
    // End of variables declaration//GEN-END:variables
}
