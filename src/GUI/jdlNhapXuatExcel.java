/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.DAOPhieuNhap;
import static DAO.DBConection.conn;
import DTO.DTOKho;
import DTO.DTOPhieuNhap;
import static GUI.Test.ImagePast2;
import static GUI.jdllogin.chucvu;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Iterator;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author KMB1604
 */
public class jdlNhapXuatExcel extends javax.swing.JDialog {

    /**
     * Creates new form jdlNhapXuatExcel
     */
    public jdlNhapXuatExcel(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Chọn chức năng Excel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jButton1.setText("Nhập File Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Xuất File Excel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
public static int idphieunhapp;

public void taophieunhap(){
//    
//     DTOPhieuNhap PN = new DTOPhieuNhap(MaNCC, MaNV, SoPhieuNhap, NgayNhap, TongTien, HinhThucThanhToan, HinhThucNhap, TrangThai, NhapKho, ThanhToan, CongNo, "", "");
//            BLL.BLLPhieuNhap.ThemPhieuNhap(PN);
}

         public static int idnhacungcap;
         public static int idnguoidung = 1;
         public static double thanhtien ;
         public static String hinhthucthanhtoan = "Tiền mặt";
         public static String hinhthucnhap;
         public static int trangthai  = 0;
         public static int nhapkho = 0;
         public static int thanhtoan = 0;
         public static double congno = 0;
         public static String hantracongno;
         public static String tag = "";
         public static String ghichu = "";     

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int batchSize = 20;
 
         DAOPhieuNhap.AddID();
         int idpn = idphieunhapp+1;
         System.out.println(idpn);
        try {
              conn.setAutoCommit(false);
        } catch (Exception e) {
        }
       
        
        
         JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.xls", "xlsx");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile  = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
        
            ImagePast2 = path;
          
          
        }
          String ab = ImagePast2.toString();
        
        
        
        try {
           
             
            FileInputStream inputStream = new FileInputStream(ab);
 
            Workbook workbook = new XSSFWorkbook(inputStream);
 
            Sheet firstSheet = workbook.getSheetAt(0);
            Iterator<Row> rowIterator = firstSheet.iterator();
 
             DTOPhieuNhap PN = new DTOPhieuNhap(idpn);
                     BLL.BLLPhieuNhap.ThemIDPhieuNhap(PN);
            
             String sql = "INSERT INTO chitietphieunhap (idsanpham, donvi, soluong, gianhap, thanhtien, ghichu, idnhacungcap, hinhthucnhap , idphieunhap ) VALUES (?, ?, ?, ?, ?,  ?, ?, ?, '"+idpn+"')";
           PreparedStatement statement = conn.prepareStatement(sql);    
            
            int count = 0;
             
            rowIterator.next(); // skip the header row
             
            while (rowIterator.hasNext()) {
                Row nextRow = rowIterator.next();
                Iterator<Cell> cellIterator = nextRow.cellIterator();
 
                while (cellIterator.hasNext()) {
                    Cell nextCell = cellIterator.next();
 
                    int columnIndex = nextCell.getColumnIndex();
 
                    switch (columnIndex) {
                  
                         
                   
                    case 0:
                        int idsanpham = (int) nextCell.getNumericCellValue();
                       
                              statement.setInt(1, idsanpham);
                              break;
                    case 1:
                        String donvi =  nextCell.getStringCellValue();
                       
                              statement.setString(2, donvi);
                              break;
                              
                    case 2:
                        int soluong = (int) nextCell.getNumericCellValue();
                       
                              statement.setInt(3, soluong);
                        break;
                     case 3:
                        double gianhap = (int) nextCell.getNumericCellValue();
                       
                              statement.setDouble(4, gianhap);
                              break;
                    case 4:
                        double thanhtien = (int) nextCell.getNumericCellValue();
                       
                              statement.setDouble(5, thanhtien);     
                              break;
                    case 5:
                        String ghichu =  nextCell.getStringCellValue();
                       
                              statement.setString(6, ghichu);    
                              break;
                     case 6:
                        int idncc = (int) nextCell.getNumericCellValue();
                       
                              statement.setInt(7, idncc);
                              break;
                              
                     case 7:
                          String hinhthucnhap =  nextCell.getStringCellValue();
                       
                              statement.setString(8, hinhthucnhap);    
                              break;  
                        
                  
                       
                    }
 
                    
                    
        
                    
                    
                }
                 
                statement.addBatch();
                 
                if (count % batchSize == 0) {
                    statement.executeBatch();
                }              
 
                
                
                
            }
            DAOPhieuNhap.LayThongTinCTPhieuNhap(idpn);
        System.out.println(statement);
        String mapn =  BLL.BLLPhieuNhap.TaoMaPhieuNhap();       
        DTOPhieuNhap PN2 = new DTOPhieuNhap(idpn, idnhacungcap, chucvu, mapn, thanhtien, hinhthucthanhtoan, hinhthucnhap, trangthai, nhapkho, thanhtoan, congno, tag, ghichu);
        BLL.BLLPhieuNhap.SuaPhieuNhap(PN2);
        
        
        
        
//        
//         ResultSet rsidsp = DAO.DAOPhieuNhap.LayKhoTheoIDSP(MaSP);
//                try {
//                    DTOKho kh = BLL.BLLKho.GetKhoTheoIDSP(MaSP);
//
//                    if (rsidsp.next()) {
//                        int HangDangVeTrongKho = kh.getHangDangVe();
//                        int HangDangVe = HangDangVeTrongKho + SoLuong;
//                        DTOKho K = new DTOKho(MaSP, HangDangVe);
//                        BLL.BLLKho.SuaHangDangVeKho(K);
//                    } else {
//                        DTOKho KH = new DTOKho(MaSP, MaPN, TonKho, SoLuong, TrangThaiKho);
//                        BLL.BLLKho.ThemKho(KH);
//                    }
//                } catch (SQLException ex) {
//                    ThongBaoCanhBao.ThongBao("Lỗi sửa kho!", "Thông Báo !");
//                }
//        
        
        ThongBaoThongTin.ThongBao("Nhập file excel thành công"+"\n"+"Số HD nhập: "+mapn, "Thông báo");
            workbook.close();
            statement.executeBatch();

            conn.commit();
           
             
         
           
             
        } catch (IOException ex1) {
            System.out.println("Error reading file");
            DAOPhieuNhap.XoaPhieuNhap(idpn);
            ex1.printStackTrace();
        } catch (SQLException ex2) {
            System.out.println("Database error");
            DAOPhieuNhap.XoaPhieuNhap(idpn);
            ex2.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
public static int idpn;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         System.out.println(idpn);
   JFileChooser chooser = new JFileChooser();
        int i = chooser.showSaveDialog(chooser);
           if (i == JFileChooser.APPROVE_OPTION) {
                 File file = chooser.getSelectedFile();
        String excelFilePath = file +".xlsx";
 
        try {
            String sql = "SELECT * FROM chitietphieunhap where idphieunhap = '"+idpn+"'";
 
            Statement statement = conn.createStatement();
 
            ResultSet result = statement.executeQuery(sql);
 
            XSSFWorkbook workbook = new XSSFWorkbook();
            
            XSSFSheet sheet = workbook.createSheet("NhapHang");
 
            writeHeaderLine(sheet);
 
            writeDataLines(result, workbook, sheet);
 
            FileOutputStream outputStream = new FileOutputStream(excelFilePath);
            workbook.write(outputStream);
            workbook.close();
 
            statement.close();
                  int kq = JOptionPane.showConfirmDialog(new JFrame(), "Xuất File Excel Thành Công"+"\n"+"Bạn có muốn mở File excel này không",
                "Thông báo xác nhận", JOptionPane.YES_NO_OPTION);
        if (kq == JOptionPane.YES_OPTION) {
                Desktop.getDesktop().open(new File(excelFilePath));  
        }
                
                
                
                
                
        } catch (SQLException e) {
            System.out.println("Datababse error:");
            e.printStackTrace();
        } catch (IOException e) {
            System.out.println("File IO error:");
            e.printStackTrace();
        }
           }
    }
 
    private void writeHeaderLine(XSSFSheet sheet) {
   
        Row headerRow = sheet.createRow(0);
        
        Cell headerCell = headerRow.createCell(0);
        
        headerCell.setCellValue("idsanpham");
 
        headerCell = headerRow.createCell(1);
        headerCell.setCellValue("donvi");
        
        headerCell = headerRow.createCell(2);
        headerCell.setCellValue("soluong");
        
        headerCell = headerRow.createCell(3);
        headerCell.setCellValue("gianhap");
        
        headerCell = headerRow.createCell(4);
        headerCell.setCellValue("thanhtien");
        
        headerCell = headerRow.createCell(5);
        headerCell.setCellValue("ghichu");
        
        headerCell = headerRow.createCell(6);
        headerCell.setCellValue("idnhacungcap");
        
        headerCell = headerRow.createCell(7);
        headerCell.setCellValue("hinhthucnhap");
        
         
 
       
    }
 
    private void writeDataLines(ResultSet result, XSSFWorkbook workbook,
            XSSFSheet sheet) throws SQLException {
        int rowCount = 1;
 
        while (result.next()) {
            
            int idsize = result.getInt("idsanpham");
            
            String tensize = result.getString("donvi");
            
            int soluong = result.getInt("soluong");
            
            double gianhap = result.getDouble("gianhap");
            
             double thanhtien = result.getDouble("thanhtien");
            
            String ghichu = result.getString("ghichu");
 
            int idnhacungcap = result.getInt("idnhacungcap");
            
             String hinhthucnhap = result.getString("hinhthucnhap");
            
            
            
            Row row = sheet.createRow(rowCount++);
 
            int columnCount = 0;
            Cell cell = row.createCell(columnCount++);
            cell.setCellValue(idsize);
 
            cell = row.createCell(columnCount++);
            cell.setCellValue(tensize);
 
            cell = row.createCell(columnCount++);
            cell.setCellValue(soluong);
            
             cell = row.createCell(columnCount++);
            cell.setCellValue(gianhap);
            
             cell = row.createCell(columnCount++);
            cell.setCellValue(thanhtien);
            
             cell = row.createCell(columnCount++);
            cell.setCellValue(ghichu);
            
            cell = row.createCell(columnCount++);
            cell.setCellValue(idnhacungcap);
            
            cell = row.createCell(columnCount++);
            cell.setCellValue(hinhthucnhap);
 
 
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdlNhapXuatExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdlNhapXuatExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdlNhapXuatExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdlNhapXuatExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jdlNhapXuatExcel dialog = new jdlNhapXuatExcel(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
